@page "/auth-callback"
@inject NavigationManager NavManager
@inject IJSRuntime JS

<h3>Authenticating...</h3>

@code {
    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavManager.Uri);
        var fragment = uri.Fragment.TrimStart('#');

        var query = ParseFragment(fragment);

        if (query.TryGetValue("access_token", out var accessToken) &&
            query.TryGetValue("user_id", out var userId))
        {
            await JS.InvokeVoidAsync("console.log", $"AccessToken: {accessToken}");
            await JS.InvokeVoidAsync("console.log", $"UID: {userId}");

            NavManager.NavigateTo("/");
        }
        else
        {
            await JS.InvokeVoidAsync("console.log", "Authentication failed: token not found");
        }
    }

    private Dictionary<string, string> ParseFragment(string fragment)
    {
        var result = new Dictionary<string, string>();

        if (string.IsNullOrWhiteSpace(fragment))
            return result;

        var pairs = fragment.Split('&');
        foreach (var pair in pairs)
        {
            var parts = pair.Split('=');
            if (parts.Length == 2)
            {
                var key = Uri.UnescapeDataString(parts[0]);
                var value = Uri.UnescapeDataString(parts[1]);
                result[key] = value;
            }
        }

        return result;
    }
}
